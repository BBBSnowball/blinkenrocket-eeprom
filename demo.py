#! /usr/bin/env nix-shell
#! nix-shell -i python -p "python3.withPackages(p:[p.pyftdi])"

from blinkenrocket_eeprom import *

# import two animations via URLs that were generated by the online editor
a = Animation.from_url("editor.blinkenrocket.de/?s=eyJkZWxheSI6MCwicmVwZWF0IjowLCJkaXJlY3Rpb24iOjAsIm5hbWUiOiIiLCJzcGVlZCI6OSwidHlwZSI6InBpeGVsIiwiYW5pbWF0aW9uIjp7ImRhdGEiOlswLDAsMCwwLDAsOCwwLDAsMCwwLDAsMCwxMiwxMiwwLDEyLDAsMCwwLDMwLDMwLDAsMzAsMCwwLDAsMzEsMzEsMCwwLDMxLDAsMCwzMSwzMSwyMSwwLDMwLDMxLDAsMzEsMjEsMTcsMCwzMCwxLDMwLDAsMjEsMTcsMCwzMCwxLDMwLDAsOCwxNywwLDMwLDEsMzAsMCw4LDMxLDAsMzAsMSwzMCwwLDgsMzEsMCwzMCwxLDMwLDAsOCwzMSwwLDgsMSwzMCwwLDgsMzEsMCw4LDMxLDMwLDAsOCwzMSwwLDgsMzEsMCwwLDgsMzEsMCw4LDMxLDAsMjksOCwzMSwwLDgsMzEsMCwyOSwyMSwzMSwwLDgsMzEsMCwyOSwyMSwxOCwwLDgsMzEsMCwyOSwyMSwxOCwwLDgsMzEsMCwyOSwyMSwxOCwwLDE0LDMxLDAsMjksMjEsMTgsMCwxNCw4MSwwLDI5LDIxLDE4LDAsMTQsODEsODEsMjksMjEsMTgsMCwxNCw4MSw4MSw3OCwyMSwxOCwwLDE0LDgxLDgxLDc4LDY0LDE4LDAsMTQsODEsODEsNzgsNjQsODAsMCwxNCw4MSw4MSw3OCw2NCw4MCw4OCwxNCw4MSw4MSw3OCw2NCw4MCw4OCw4MCw4MSw4MSw3OCw2NCw4MCw4OCw4MCwyMDgsODEsNzgsNjQsODAsODgsODAsMjA4LDgwLDc4LDY0LDgwLDg4LDgwLDIwOCw4MCwwLDMyLDQ4LDU2LDQ4LDQ4LDQ4LDExMiwzMiwxNiwyNCwxNiwxNiwxNiwxNiw0OCwxNiwxMiw4LDgsOCw4LDgsOCwyNCw4LDgsOCwwLDAsOCw4LDgsOCw4LDAsMCwwLDAsOCw4LDgsMCwwLDAsMCwwLDAsOCwwLDAsMCwwLDAsMCwwLDBdLCJjdXJyZW50RnJhbWUiOjIzLCJsZW5ndGgiOjM0LCJmcmFtZXMiOjM0fSwiaWQiOiJlODFjMTRlNi00NjllLTRkOTctYmVjZi1hMDA5YzE5NGI1YTciLCJtb2RpZmllZEF0IjoiMjAyMi0xMC0yOFQwMDoyODoxNS45MzlaIn0%3D")
a.repeat = 1
print(repr(a))

b = Animation.from_url("editor.blinkenrocket.de/?s=eyJkZWxheSI6MCwicmVwZWF0IjowLCJkaXJlY3Rpb24iOjAsImlkIjoiMGU2MzQ2MWQtNTVhZC00MzM3LWIwYmUtZjdlMDYzYThmM2FjIiwibmFtZSI6IiIsInNwZWVkIjoxMywiY3JlYXRpb25EYXRlIjoxNjY2OTA5NjQyLCJ0eXBlIjoidGV4dCIsInRleHQiOiIgIEpldHp0IGthbm5zdCBkdSBuaWNodCBtZWhyIGJlaGF1cHRlbiwgZGFzcyBkdSBuaWNodCBsb2V0ZW4ga2FubnN0IiwiYW5pbWF0aW9uIjp7ImRhdGEiOlswLDAsMCwwLDAsMCwwLDBdLCJjdXJyZW50RnJhbWUiOjAsImZyYW1lcyI6MSwibGVuZ3RoIjoxfSwibW9kaWZpZWRBdCI6IjIwMjItMTAtMjdUMjI6Mjc6MjQuMzkwWiJ9")
b.repeat = 1
print(repr(b))

# create a third animation - this time using Python
#c = Animation.from_url("editor.blinkenrocket.de/?s=eyJkZWxheSI6MS41LCJyZXBlYXQiOjAsImRpcmVjdGlvbiI6MCwiaWQiOiIxNDkwODA3Ni04M2M3LTQyYjAtOWI4Zi1lZTViNjVlMjhhZjciLCJuYW1lIjoiIiwic3BlZWQiOjUsImNyZWF0aW9uRGF0ZSI6MTY2NjkwOTY0OSwidHlwZSI6InBpeGVsIiwiYW5pbWF0aW9uIjp7ImRhdGEiOlswLDE5NiwxOTQsMTgsMTgsMTk0LDE5NiwwLDAsNjgsNjYsMTgsMTgsMTk0LDE5NiwwLDAsMTk2LDE5NCwxOCwxOCwxOTQsMTk2LDBdLCJjdXJyZW50RnJhbWUiOjIsImxlbmd0aCI6MywiZnJhbWVzIjozfSwibW9kaWZpZWRBdCI6IjIwMjItMTAtMjhUMDA6NDQ6MTEuMDQ0WiJ9")
#c.repeat = 1
c = PixelAnimation(
	# 0
	" XX  XX " + "\n" +
	" XX  XX " + "\n" +
	"        " + "\n" +
	"   XX   " + "\n" +
	"        " + "\n" +
	" X    X " + "\n" +
	"  XXXX  " + "\n" +
	"        " + "\n",
	# 1
	"     XX " + "\n" +
	" XX  XX " + "\n" +
	"        " + "\n" +
	"   XX   " + "\n" +
	"        " + "\n" +
	" X    X " + "\n" +
	"  XXXX  " + "\n" +
	"        " + "\n",
	# 2
	" XX  XX " + "\n" +
	" XX  XX " + "\n" +
	"        " + "\n" +
	"   XX   " + "\n" +
	"        " + "\n" +
	" X    X " + "\n" +
	"  XXXX  " + "\n" +
	"        " + "\n",
	speed=5, delay=3, repeat=1)
print(repr(c))

# And here is yet another way for defining animations: We can import binary data.
# This is useful for animations that are in the firmware sources. If you have read
# an existing EEPROM, have a look at Animation.from_eeprom.
# https://github.com/blinkenrocket/firmware/blob/master/src/static_patterns.h
shutdownPattern = Animation.from_bytes(bytes([
	0x20, 0x40,
	0x0e, 0x0f,
	0xff, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xff,
	0x7e, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x7e,
	0x3c, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x3c,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00,
	0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
]))
print(shutdownPattern)

turnonPattern = Animation.from_bytes(bytes([
    0x20, 0x40,
    0x0e, 0x0f,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,        
    0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00,
    0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00,
    0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
    0x3c, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x3c,
    0x7e, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x7e,
    0xff, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xff
]))
print(turnonPattern)


# We can export the animation as a URL, which will add the animation to the online editor.
print(a.to_url())

# Let's play two of the animations.
# (The other one is a text animation, which we cannot play here.)
a.play()
c.play()


# Turn the animations into binary data for the EEPROM.
eeprom_bytes = Animation.to_eeprom(a, b, c)
print(repr(eeprom_bytes))
# ... and back again.
abc2 = Animation.from_eeprom(eeprom_bytes)
print(abc2)
if repr([a, b, c]) != repr(abc2):
    print("not equal!")
    print("%r\n\n!=\n\n%r" % (repr([a, b, c]), repr(abc2)))

# Write to file in case someone wants to use a different EEPROM programmer.
with open("eeprom.bin", "wb") as f:
    f.write(eeprom_bytes)

# Write to EEPROM (change to True to enable)
if False:
    print(eeprom_bytes)
    prom = I2cEEPROM("ftdi://ftdi:232h/1")
    print(prom.read_eeprom())
    prom.write_eeprom(eeprom_bytes)

